import React, { Component } from 'react'
import ReactDOM from 'react-dom'
import _ from 'lodash';

import { createStore, applyMiddleware, combineReducers, compose } from 'redux'
import { Provider, connect } from 'react-redux'
// import { Form, Control, Errors, combineForms, actions } from 'react-redux-form'
import thunk from 'redux-thunk';
import createLogger from 'redux-logger';

import {
  Field,
  Errors,
  Control,
  Form,
  LocalForm,
  combineForms,
  actions,
  formReducer,
  modeled,
  controls
} from 'react-redux-form';

import { Checkbox } from 'react-mdl';
import 'react-mdl/extra/material.css';
import 'react-mdl/extra/material.js';

const initialUserState = {
  img: null
};

const store = createStore(combineForms({
  user: initialUserState,
}), applyMiddleware(thunk, createLogger()));

class UploadForm extends Component {
  onSubmit = (values, event) => {
    const formData = new FormData(event.target);

    const request = new XMLHttpRequest();
    request.open('POST', '/upload', true);
    request.onload = function(oEvent) {
      if (request.status == 200) {
        console.log('Uploaded!');
      } else {
        console.log('Error uploading.');
      }
    };

    request.send(formData);
    event.preventDefault();
  }
  render() {
    return (
      <Form
        model="user"
        encType="multipart/form-data"
        onSubmit={this.onSubmit}
      >
        <Control.file model=".avatar" />
        <button>Upload!</button>
      </Form>
    );
  };
}

class UserForm extends Component {
  render() {
    return (
      <div>
      <Form encType="multipart/form-data" model="user" onSubmit={(a,b) => console.log(a,b)}>
        <Control.file model="user.img" />

        <button type="submit">
          Submit (check console)
        </button>
      </Form>
      <form encType="multipart/form-data" action="/test" id="foo">
        <input type="file" />
         <button type="submit">
          Submit (check console)
        </button>
      </form>
      <UploadForm />
      </div>
    )
  }
}

class App extends React.Component {
  render() {
    return (
      <Provider store={store}>
        <UserForm />
      </Provider>
    );
  }
}

ReactDOM.render(<App />, document.getElementById('app'));
